@page "/customer-portal"
@using PLKSYS.Core.Models
@using PLKSYS.Core.Interfaces
@using System.Net.Http.Json
@attribute [Authorize(Roles = "Admin,Superadmin,Customer")]
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<PageTitle>Müşteri Portalı</PageTitle>

<div class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8">
    <div class="max-w-4xl mx-auto px-4">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-gray-900 mb-2">Toyota Müşteri Portalı</h1>
            <p class="text-lg text-gray-600">Hoş geldiniz! Aşağıdaki seçeneklerden birini kullanabilirsiniz.</p>
        </div>

        <!-- Hata ve Başarı Mesajları -->
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md mb-6" role="alert">
                <span class="block sm:inline">@errorMessage</span>
            </div>
        }

        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-md mb-6" role="alert">
                <span class="block sm:inline">@successMessage</span>
            </div>
        }

        <!-- Ana Seçenekler -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">

            <!-- Yaya Ziyaret Seçeneği -->
            <div class="bg-white rounded-lg shadow-lg p-6 border-l-4 border-blue-500">
                <div class="flex items-center mb-4">
                    <div class="bg-blue-100 p-3 rounded-full mr-4">
                        <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">Yaya Ziyaret</h3>
                        <p class="text-gray-600">Plakası olmadan birime ziyaret kaydı</p>
                    </div>
                </div>
                <button @onclick="ShowWalkInForm"
                class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-md transition duration-200">
                    Yaya Ziyaret Kaydı Yap
                </button>
            </div>

            <!-- Araç Durumu Sorgulama -->
            <div class="bg-white rounded-lg shadow-lg p-6 border-l-4 border-green-500">
                <div class="flex items-center mb-4">
                    <div class="bg-green-100 p-3 rounded-full mr-4">
                        <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                    </div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">Araç Durumu</h3>
                        <p class="text-gray-600">Aracınızın servisteki durumunu öğrenin</p>
                    </div>
                </div>
                <button @onclick="ShowVehicleStatusForm"
                class="w-full bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-4 rounded-md transition duration-200">
                    Araç Durumu Sorgula
                </button>
            </div>
        </div>

        <!-- Yaya Ziyaret Formu -->
        @if (showWalkInForm)
        {
            <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-6">Yaya Ziyaret Kaydı</h2>

                @if (currentCustomer == null)
                {
                    <!-- Müşteri Bilgileri Formu -->
                    <div class="space-y-4 mb-6">
                        <h3 class="text-lg font-semibold text-gray-800">Kişisel Bilgileriniz</h3>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Ad *</label>
                                <input @bind="customerRequest.FirstName" type="text"
                                class="w-full px-3 py-2 border border-gray-300 text-black rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                required />
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Soyad *</label>
                                <input @bind="customerRequest.LastName" type="text"
                                class="w-full px-3 py-2 border border-gray-300 text-black rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                required />
                            </div>
                        </div>




                    </div>
                }

                <!-- Ziyaret Bilgileri -->
                <div class="space-y-4">
                    <h3 class="text-lg font-semibold text-gray-800">Ziyaret Bilgileri</h3>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Ziyaret Edilecek Birim *</label>
                            <select @bind="walkInRequest.VisitedDepartment"
                            class="w-full px-3 py-2 border border-gray-300 text-black rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                            required>
                                <option value="">Birim Seçiniz</option>
                                <option value="Servis">Servis</option>
                                <option value="Satış">Satış</option>
                                <option value="Sigorta">Sigorta</option>
                                <option value="Muhasebe">Muhasebe</option>
                                <option value="Yıkama">Yıkama</option>
                                <option value="Müşteritemsilcisi">Müşteri Temsilcisi</option>
                                <option value="Yönetim">Yönetim</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Görüşülecek Personel *</label>
                            <input @bind="walkInRequest.VisitedPersonnel" type="text"
                            class="w-full px-3 py-2 border border-gray-300 text-black rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                            required />
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Ziyaret Nedeni *</label>
                        <textarea @bind="walkInRequest.VisitReason" rows="3"
                        class="w-full px-3 py-2 border border-gray-300 text-black rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                        required></textarea>
                    </div>
                </div>

                <div class="flex space-x-4 mt-6">
                    <button @onclick="SubmitWalkInVisit" disabled="@isLoading"
                    class="bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-bold py-2 px-6 rounded-md transition duration-200">
                        @if (isLoading)
                        {
                            <span class="inline-block animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></span>
                        }
                        Kaydet
                    </button>
                    <button @onclick="CancelWalkInForm"
                    class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-md transition duration-200">
                        İptal
                    </button>
                </div>
            </div>
        }

        <!-- Araç Durumu Sorgulama Formu -->
        @if (showVehicleStatusForm)
        {
            <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-6">Araç Durumu Sorgulama</h2>

                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Plaka Numarası *</label>
                        <input @bind="vehicleStatusRequest.PlateNumber" type="text" placeholder="Örn: 34ABC123"
                        class="w-full px-3 py-2 border border-gray-300 text-black rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                        required />
                    </div>
                </div>

                <div class="flex space-x-4 mt-6">
                    <button @onclick="QueryVehicleStatus" disabled="@isLoading"
                    class="bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white font-bold py-2 px-6 rounded-md transition duration-200">
                        @if (isLoading)
                        {
                            <span class="inline-block animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></span>
                        }
                        Sorgula
                    </button>
                    <button @onclick="CancelVehicleStatusForm"
                    class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-md transition duration-200">
                        İptal
                    </button>
                </div>
            </div>
        }

        <!-- Araç Durumu Sonuçları -->
        @if (vehicleStatus != null)
        {
            <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
                <h2 class="text-2xl font-bold text-gray-900 mb-6">Araç Durumu - @vehicleStatus.PlateNumber</h2>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Genel Bilgiler -->
                    <div class="space-y-4">
                        <h3 class="text-lg font-semibold text-gray-800 border-b pb-2">Genel Bilgiler</h3>

                        <div class="space-y-2">
                            <div class="flex justify-between">
                                <span class="font-medium text-gray-600">Müşteri:</span>
                                <span class="text-gray-900">@vehicleStatus.CustomerName</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="font-medium text-gray-600">Mevcut Durum:</span>
                                <span class="@(vehicleStatus.CurrentStatus == "in" ? "text-green-600 font-semibold" : "text-red-600")">
                                    @(vehicleStatus.CurrentStatus == "in" ? "Plazada" : "Plazada Değil")
                                </span>
                            </div>
                            <div class="flex justify-between">
                                <span class="font-medium text-gray-600">Servis Türü:</span>
                                <span class="text-gray-900">@(vehicleStatus.ServiceType ?? "Belirtilmemiş")</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="font-medium text-gray-600">Randevu:</span>
                                <span class="text-gray-900">@(vehicleStatus.HasAppointment ? "Var" : "Yok")</span>
                            </div>
                        </div>
                    </div>

                    <!-- Zaman Bilgileri -->
                    <div class="space-y-4">
                        <h3 class="text-lg font-semibold text-gray-800 border-b pb-2">Zaman Bilgileri</h3>

                        <div class="space-y-2">
                            @if (vehicleStatus.LastEntryTime.HasValue)
                            {
                                <div class="flex justify-between">
                                    <span class="font-medium text-gray-600">Son Giriş:</span>
                                    <span class="text-gray-900">@vehicleStatus.LastEntryTime.Value.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</span>
                                </div>
                            }
                            @if (vehicleStatus.LastExitTime.HasValue)
                            {
                                <div class="flex justify-between">
                                    <span class="font-medium text-gray-600">Son Çıkış:</span>
                                    <span class="text-gray-900">@vehicleStatus.LastExitTime.Value.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</span>
                                </div>
                            }
                            @if (vehicleStatus.AppointmentDate.HasValue)
                            {
                                <div class="flex justify-between">
                                    <span class="font-medium text-gray-600">Randevu Tarihi:</span>
                                    <span class="text-gray-900">@vehicleStatus.AppointmentDate.Value.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</span>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Servis Durumu -->
                @if (vehicleStatus.CurrentStatus == "in")
                {
                    <div class="mt-6 p-4 bg-blue-50 rounded-lg">
                        <h3 class="text-lg font-semibold text-blue-800 mb-3">Servis Durumu</h3>

                        @if (!string.IsNullOrEmpty(vehicleStatus.ClaimedByUserName))
                        {
                            <div class="flex items-center space-x-2 mb-2">
                                <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                <span class="text-green-700 font-medium">
                                    @vehicleStatus.ClaimedByUserName tarafından üstlenildi
                                </span>
                            </div>
                            @if (vehicleStatus.ClaimedAt.HasValue)
                            {
                                <p class="text-sm text-gray-600 ml-7">
                                    @vehicleStatus.ClaimedAt.Value.ToLocalTime().ToString("dd.MM.yyyy HH:mm")'de üstlenildi
                                </p>
                            }
                        }
                        else
                        {
                            <div class="flex items-center space-x-2">
                                <svg class="w-5 h-5 text-yellow-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <span class="text-yellow-700 font-medium">Henüz personel tarafından üstlenilmedi</span>
                            </div>
                        }

                        @if (vehicleStatus.ExitApprovalRequired && !vehicleStatus.ExitApproved)
                        {
                            <div class="mt-3 p-3 bg-yellow-100 rounded border-l-4 border-yellow-500">
                                <p class="text-yellow-800 font-medium">⚠️ Çıkış için muhasebe onayı bekleniyor</p>
                            </div>
                        }
                        else if (vehicleStatus.ExitApprovalRequired && vehicleStatus.ExitApproved)
                        {
                            <div class="mt-3 p-3 bg-green-100 rounded border-l-4 border-green-500">
                                <p class="text-green-800 font-medium">✅ Çıkış onayı verildi</p>
                            </div>
                        }
                    </div>
                }

                <!-- Randevu Detayları -->
                @if (!string.IsNullOrEmpty(vehicleStatus.AppointmentDetails))
                {
                    <div class="mt-6 p-4 bg-gray-50 rounded-lg">
                        <h3 class="text-lg font-semibold text-gray-800 mb-2">Randevu Detayları</h3>
                        <p class="text-gray-700">@vehicleStatus.AppointmentDetails</p>
                    </div>
                }

                <!-- Son Notlar -->
               @* @if (vehicleStatus.RecentNotes.Any())
                {
                    <div class="mt-6">
                        <h3 class="text-lg font-semibold text-gray-800 mb-4">Son Notlar</h3>
                        <div class="space-y-3">
                            @foreach (var note in vehicleStatus.RecentNotes)
                            {
                                <div class="border border-gray-200 rounded-lg p-3">
                                    <div class="flex justify-between items-start mb-2">
                                        <span class="font-medium text-gray-800">@note.CreatedByUserName</span>
                                        <span class="text-sm text-gray-500">@note.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</span>
                                    </div>
                                    <p class="text-gray-700">@note.Content</p>
                                </div>
                            }
                        </div>
                    </div>
                }*@

                <div class="mt-6">
                    <button @onclick="ClearVehicleStatus"
                    class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded-md transition duration-200">
                        Yeni Sorgulama Yap
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private bool showWalkInForm = false;
    private bool showVehicleStatusForm = false;
    private bool isLoading = false;
    private string? errorMessage;
    private string? successMessage;

    // Form modelleri
    private CustomerRegistrationRequest customerRequest = new();
    private WalkInVisitRequest walkInRequest = new();
    private VehicleStatusRequest vehicleStatusRequest = new();

    // Data modelleri
    private PLKSYS.Core.Models.Customer? currentCustomer;
    private VehicleStatusResponse? vehicleStatus;

    private void ShowWalkInForm()
    {
        showWalkInForm = true;
        showVehicleStatusForm = false;
        vehicleStatus = null;
        ClearMessages();
    }

    private void ShowVehicleStatusForm()
    {
        showVehicleStatusForm = true;
        showWalkInForm = false;
        vehicleStatus = null;
        ClearMessages();
    }

    private void CancelWalkInForm()
    {
        showWalkInForm = false;
        customerRequest = new();
        walkInRequest = new();
        currentCustomer = null;
        ClearMessages();
    }

    private void CancelVehicleStatusForm()
    {
        showVehicleStatusForm = false;
        vehicleStatusRequest = new();
        ClearMessages();
    }

    private void ClearVehicleStatus()
    {
        vehicleStatus = null;
        vehicleStatusRequest = new();
        showVehicleStatusForm = true;
    }

    private void ClearMessages()
    {
        errorMessage = null;
        successMessage = null;
    }

    private async Task SubmitWalkInVisit()
    {
        if (isLoading) return;

        try
        {
            isLoading = true;
            ClearMessages();

            // Önce müşteri kaydı yap
            if (currentCustomer == null)
            {
                var customerResponse = await Http.PostAsJsonAsync("api/customer/register", customerRequest);
                if (customerResponse.IsSuccessStatusCode)
                {
                    currentCustomer = await customerResponse.Content.ReadFromJsonAsync<PLKSYS.Core.Models.Customer>();
                }
                else
                {
                    errorMessage = "Müşteri kaydı yapılırken hata oluştu.";
                    return;
                }
            }

            if (currentCustomer != null)
            {
                walkInRequest.CustomerId = currentCustomer.Id;

                // Yaya ziyaret kaydı yap
                var visitResponse = await Http.PostAsJsonAsync("api/customer/walk-in-visit", walkInRequest);
                if (visitResponse.IsSuccessStatusCode)
                {
                    successMessage = "Yaya ziyaret kaydınız başarıyla oluşturuldu. İlgili birime bildirim gönderildi.";

                    // Formu temizle
                    await Task.Delay(2000);
                    CancelWalkInForm();
                }
                else
                {
                    errorMessage = "Ziyaret kaydı yapılırken hata oluştu.";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Hata oluştu: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task QueryVehicleStatus()
    {
        if (isLoading || string.IsNullOrWhiteSpace(vehicleStatusRequest.PlateNumber)) return;

        try
        {
            isLoading = true;
            ClearMessages();

            var response = await Http.GetAsync($"api/customer/vehicle-status/{vehicleStatusRequest.PlateNumber.Trim().ToUpper()}");

            if (response.IsSuccessStatusCode)
            {
                vehicleStatus = await response.Content.ReadFromJsonAsync<VehicleStatusResponse>();
                showVehicleStatusForm = false;
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                errorMessage = $"'{vehicleStatusRequest.PlateNumber}' plakalı araç bulunamadı.";
            }
            else
            {
                errorMessage = "Araç durumu sorgulanırken hata oluştu.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Hata oluştu: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}