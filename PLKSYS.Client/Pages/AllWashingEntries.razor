@page "/washing/all-entries"
@using PLKSYS.Core.Models
@using PLKSYS.Client.Services
@inject WashingService WashingService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin,Superadmin")]

<PageTitle>Tüm Yıkama İşlemleri</PageTitle>

<h3 class="text-2xl font-bold mb-6 text-gray-800">Tüm Yıkama İşlemleri</h3>

@if (loading)
{
    <p><em>Yükleniyor...</em></p>
}
else if (allEntries == null || !allEntries.Any())
{
    <p class="text-gray-600">Henüz hiç yıkama işlemi bulunmamaktadır.</p>
}
else
{
    <div class="overflow-x-auto bg-white rounded-lg shadow-lg p-4">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Plaka</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Gönderen</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Yıkamaya Gönderilme Saati</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tamamlayan</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tamamlanma Saati</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Durum</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var entry in allEntries)
                {
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@entry.PlateNumber</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">@entry.SentByUserName</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">@entry.SentToWashingTime.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">@(entry.CompletedByUserName ?? "-")</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">@(entry.WashingCompletedTime?.ToLocalTime().ToString("dd.MM.yyyy HH:mm") ?? "-")</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm @(entry.Status == "Tamamlandı" ? "text-green-600 font-semibold" : "text-yellow-600 font-semibold")">@entry.Status</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@if (!string.IsNullOrEmpty(message))
{
    <div class="mt-4 p-3 rounded-md @(isSuccess ? "bg-green-100 text-green-700" : "bg-red-100 text-red-700")">
        @message
    </div>
}

@code {
    private IEnumerable<WashingQueueEntry>? allEntries;
    private bool loading = true;
    private string message = string.Empty;
    private bool isSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadAllEntries();
    }

    private async Task LoadAllEntries()
    {
        loading = true;
        try
        {
            allEntries = await WashingService.GetAllWashingEntriesAsync();
        }
        catch (Exception ex)
        {
            message = $"Tüm yıkama işlemleri yüklenirken bir hata oluştu: {ex.Message}";
            isSuccess = false;
            Console.WriteLine($"Error loading all washing entries: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }
}