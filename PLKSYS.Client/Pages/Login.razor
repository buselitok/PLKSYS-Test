@page "/login"
@layout MainLayout
@inject ClientServices.AuthService AuthService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using PLKSYS.Core.Models @* LoginRequest'in tanınması için eklendi *@

<div class="min-h-screen flex items-center justify-center bg-gray-100">
    <div class="bg-white p-8 rounded-lg shadow-lg max-w-md w-full">
        <h2 class="text-3xl font-bold text-center text-gray-800 mb-6">Giriş Yap</h2>

        <EditForm Model="@loginRequest" OnValidSubmit="HandleLogin" FormName="loginForm">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-red-500 text-sm mb-4" />

            <div class="mb-4">
                <label for="username" class="block text-gray-700 text-sm font-bold mb-2">Kullanıcı Adı:</label>
                <InputText id="username" @bind-Value="loginRequest.Username" TValue="string"
                           class="shadow appearance-none border rounded-md w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent" />
            </div>

            <div class="mb-6">
                <label for="password" class="block text-gray-700 text-sm font-bold mb-2">Şifre:</label>
                <InputText id="password" @bind-Value="loginRequest.Password" type="password" TValue="string"
                           placeholder="Şifrenizi Girin"
                           class="shadow appearance-none border rounded-md w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent" />
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md relative mb-4" role="alert">
                    <span class="block sm:inline">@errorMessage</span>
                </div>
            }

            <button type="submit"
                    class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-md w-full focus:outline-none focus:shadow-outline transition duration-300">
                @if (isLoading)
                {
                    <span class="animate-spin inline-block mr-2">🔄</span> <span>Yükleniyor...</span>
                }
                else
                {
                    <span>Giriş Yap</span>
                }
            </button>
        </EditForm>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private string? errorMessage;
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        // Eğer kullanıcı zaten giriş yapmışsa, ana sayfaya yönlendir
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated ?? false)
        {
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = null; // Önceki hataları temizle

        try
        {
            var response = await AuthService.Login(loginRequest);
            if (response != null)
            {
                NavigationManager.NavigateTo("/"); // Başarılı giriş sonrası ana sayfaya yönlendir
            }
            else
            {
                errorMessage = "Giriş başarısız. Lütfen bilgilerinizi kontrol edin.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message; // AuthService'den gelen özel hata mesajını göster
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}